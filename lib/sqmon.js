// Generated by CoffeeScript 1.5.0
var Monitor, fs, libMonitor, md, moment, notifier, path, script, startTime, util,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

moment = require('moment');

path = require('path');

util = require('util');

fs = require('fs');

notifier = require('./loggers').get('notifier');

Monitor = require('./finder').Monitor;

startTime = moment();

if (script = process.env.SQ_SCRIPT) {
  md = require(path.resolve(script));
} else {
  notifier.error("can not load " + script);
  process.exit(1);
}

if (fs.existsSync('lib')) {
  libMonitor = new Monitor('lib Monitor', path.resolve('lib'));
  libMonitor.on('changed', function(f) {
    if (__indexOf.call(Object.keys(require.cache), f) >= 0) {
      return process.exit(0);
    }
  });
  libMonitor.start();
}

process.on('uncaughtException', function(err) {
  console.log(err);
  notifier.error(err.toString(), {
    title: "Exception"
  });
  if (moment().diff(startTime, 'seconds') < 2) {
    return process.exit(0);
  } else {
    return process.exit(1);
  }
});

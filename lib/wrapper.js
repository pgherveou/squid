// Generated by CoffeeScript 1.4.0
var Monitor, builder, fs, libMonitor, moment, notifier, script, startTime;

moment = require('moment');

fs = require('fs');

builder = require('./projectBuilder');

notifier = require('./loggers').get('notifier');

Monitor = require('./finder').Monitor;

console.log(process.argv);

startTime = moment();

if (fs.existsSync(script = process.argv.pop())) {
  console.log(script);
  require(script);
} else {
  notifier.error("can not load " + script);
  process.exit(1);
}

if (fs.existsSync('lib')) {
  libMonitor = new Monitor('lib Monitor', path.resolve('lib'), builder.config.filter);
  libMonitor.on('changed', function() {
    return process.exit(0);
  });
  libMonitor.on('created', function() {
    return process.exit(0);
  });
}

process.on('uncaughtException', function(err) {
  notifier.error("Caught exception: ", util.inspect(err));
  if (moment().diff(startTime, 'seconds') < 2) {
    return process.exit(0);
  } else {
    return process.exit(1);
  }
});

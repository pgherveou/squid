{"body":"# Squid\r\n\r\n\r\nSquid compiles your coffee, jade and stylus files, and publish  your assets to amazon s3\r\n\r\n\r\n## Install\r\n\r\ninstall the package globally to use the commands provided by the project (see desc below)\r\n\r\n```\r\n$ npm install -g squid\r\n```\r\n\r\n## sq command\r\n\r\nat the root of your project directory execute:\r\n\r\n```\r\n$ sq\r\n```\r\n\r\nor if your main script isn't index.js\r\n\r\n```\r\n$ sq my-script.js\r\n```\r\n\r\nto start node in debug mode\r\n\r\n```\r\n$ sq -d\r\n```\r\n\r\nthis will\r\n\r\n- start your server script\r\n- live recompile your files and emit a growl notification**\r\n- restart your server when a file change inside /lib (server script directory by convention)\r\n\r\nYou can also combine it to a tool like [liveReload] [1] to auto refresh your browser when client files are updated\r\n\r\n\r\n**If you want to enable growl notification, install [growl] [2] and [growlNotify] [3]\r\n\r\n![growl screenshot](https://github.com/pgherveou/squid/raw/gh-pages/images/growl.screenshot.png)\r\n\r\n\r\n## sb command\r\n\r\nif you just want to build the project source files. use the sb command\r\nat the root of your project directory execute:\r\n\r\n```\r\n$ sb\r\n```\r\n\r\nYou can also use squid to build your project inside your own build script\r\n\r\n```coffee\r\n{builder} = require 'squid'\r\n\r\n# build all files in src except your css folder\r\nbuilder.buildAll except: ['css'], (errs) ->\r\n  if errs\r\n    console.error 'Error building the project'\r\n    console.error \"#{e.file}: #{e.toString()}\" for e in errs\r\n  else\r\n    console.log 'build sucessful!'\r\n```\r\n\r\n## Supported files for compilation\r\n\r\nsquid can compile the following files.\r\nWant to add support for other file types? New builder can easily be implemented using the base Builder classe\r\n\r\n<table>\r\n  <tr>\r\n    <th>file</th><th>operation</th><th>note</th>\r\n  </tr>\r\n  <tr>\r\n    <td>*.js</td><td>copy</td><td>concat dependencies and copy to the output folder</td>\r\n  </tr>\r\n  <tr>\r\n    <td>*.coffee</td><td>compile to js</td><td>files are compiled with bare option</td>\r\n  </tr>\r\n  <tr>\r\n    <td>*.styl</td><td>compile to css</td><td>nib is imported, and /public/images is added to the path</td>\r\n  </tr>\r\n  <tr>\r\n    <td>*.jade</td><td>compile to js</td><td>template are compiled into js and wrapped in a requirejs define function</td>\r\n  </tr>\r\n</table>\r\n\r\n## files Dependencies\r\n\r\nsquid manage your file dependencies and only compile the necessary files.\r\nhere is how you define dependencies for each supported file format\r\n\r\n<table>\r\n  <tr>\r\n    <th>file</th><th>import syntax</th>\r\n  </tr>\r\n  <tr>\r\n    <td>*.js</td><td>//= import foo.js</td>\r\n  </tr>\r\n  <tr>\r\n    <td>*.coffee</td><td>#= import foo.(coffee|js)</td>\r\n  </tr>\r\n  <tr>\r\n    <td>*.styl</td><td>@import foo</td>\r\n  </tr>\r\n  <tr>\r\n    <td>*.jade</td><td>include foo</td>\r\n  </tr>\r\n</table>\r\n\r\n## Configuration\r\n\r\nYou can define a squid.json object to specify folder mappings, and compilation options\r\nHere are the default options if you dont add a squid.json to your project\r\n\r\n```js\r\n{\r\n  \"src\": \"src\", /* source folder */\r\n  \"out\": \".\", /* build  folder */\r\n  \"jade\": { /* jade default options */\r\n    \"amd\": true /* wrap jade template inside a requirejs define block */\r\n  },\r\n  \"stylus\": { /* stylus default options */\r\n    \"url\": {paths: [\"public\"]}, /* url options  */\r\n    \"paths\": [\"public/images\"] /* image lookup path  */\r\n  }\r\n}\r\n```\r\nSo if you have the following project\r\n<pre>\r\n./\r\n|- index.js\r\n|- src\r\n  |- lib\r\n    |- server_file1.coffee\r\n  |- public\r\n    |- js\r\n      |- client_file1.coffee\r\n      |- client_file1.tpl.jade\r\n    |- css\r\n      |- file1.styl\r\n</pre>\r\n\r\nafter running **sb** or **sq**, squid will generate the following files\r\n\r\n<pre>\r\n./\r\n|- index.js\r\n|- src\r\n  |- ...\r\n|- lib\r\n  |- server_file1.js\r\n|- public\r\n  |- js\r\n    |- client_file1.js\r\n    |- client_file1.tpl.js\r\n  |- css\r\n    |- file1.css\r\n</pre>\r\n\r\n### Optional configuration\r\nIf your project structure is different you can add a custom squid.json configuration:\r\n\r\n#### mappings\r\n\r\nYou can define mappings rules to output your files into different folders\r\n\r\nThe following squid.json config\r\n- use mobile as src folder\r\n- compile mobile/js/* to app/assets/javascripts/mobile\r\n- compile mobile/stylesheets/* to app/assets/stylesheets/mobile\r\n\r\n```json\r\n{\r\n\"src\": \"mobile\",\r\n\"mappings\": [\r\n\t{\"from\": \"js\", \"to\": \"app/assets/javascripts/mobile\"},\r\n\t{\"from\": \"stylesheets\", \"to\": \"app/assets/stylesheets/mobile\"}\r\n]\r\n}\r\n```\r\n\r\n### post build\r\n\r\nYou can specify a script to launch after each successful file build\r\n\r\nThe following squid.json config will trigger **make bundle-app**  each time a file is successfully\r\nbuilt in src/public\r\n\r\n```json\r\n{\r\n  \"post_build\": {\"match\": \"src/public\", \"cmd\": \"make bundle-app\" }\r\n}\r\n```\r\n\r\n### clone\r\n\r\nYou can specify multiple output folders for your build\r\n\r\nThe following squid.json config\r\n- compile your files to the default output folder (project root)\r\n- clones everything under src/public to phonegap/js\r\n\r\n```json\r\n{\r\n  \"clone\": [\r\n    { \"match\": \"src/public\", \"to\" : \"phonegap/js\"}\r\n  ]\r\n}\r\n```\r\n\r\n\r\n## s3 publication\r\n\r\nSquid publisher let you upload files within a directory to your amazon s3 bucket.\r\n- it only uploads new or modified files to your bucket.\r\n- it sets a far expiry date and zip files\r\n\r\n```coffee\r\n{Publisher} = require 'squid'\r\n\r\n# create s3 publisher\r\npublisher = new Publisher bucket: 'name',  key: 'xx', secret: 'xx'\r\n\r\n# define filter closure that will only select js, png, and css file\r\nfilter = (f, stat) -> stat.isDirectory() or /\\.(js|png|css)$/.test f\r\n\r\n# publish 'public' dir to root folder '' of the  bucket\r\npublisher.publishDir {origin: 'public', dest: '', filter}, cb\r\n\r\n```\r\n\r\n\r\n## TODO\r\n\r\n- Add more compiler options for compiler (PR are welcome)\r\n- Write some tests !!!\r\n\r\n\r\n[1]: http://livereload.com/                                 \"liveReload\"\r\n[2]: http://growl.info/growlupdateavailable                 \"growl\"\r\n[3]: http://growl.info/downloads                            \"growlNotify\"\r\n","tagline":"Squid compiles your coffee, jade and stylus files, and publish your assets to amazon s3 ","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Squid","google":""}